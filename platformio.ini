; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
description = ESP32 ventilator firmware
default_envs = ventilator


[common]
lib_deps =
    AsyncTCP
    ESP Async WebServer
    ArduinoJson
    ArduinoLog
    WiFi
    ServoESP32
    ;https://github.com/arkhipenko/TaskScheduler
    ;FastCRC
build_flags =
    -DESP32=1
    -DARDUINO_ARCH_ESP32=1
    -DBOARD_HAS_PSRAM
    -std=c++17
build_unflags =
    -std=gnu++11


; https://github.com/Makuna/NeoPixelBus/issues/175#issuecomment-549147253
[fix01]
build_flags =
    -Dtypeof=__typeof__
    -std=gnu++17
build_unflags =
    -std=c++17


[esp32]
platform_packages =
    toolchain-xtensa32 @ 2.80200.200226 ; 2.50200.80

    ; bleeding edge arduino-esp32
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#idf-release/v4.0


[env:ventilator]
board = lolin32
framework = arduino
platform = espressif32
platform_packages =
    ${esp32.platform_packages}
lib_deps =
    ${common.lib_deps}
build_flags =
    ${common.build_flags}
    ${fix01.build_flags}
    -I .pio/libdeps/ventilator/ArduinoJson_ID64/extras
build_unflags =
    ${common.build_unflags}
    ${fix01.build_unflags}
upload_port = /dev/cu.SLAB_USBtoUART
upload_speed = 921600
monitor_speed = 115200
debug_init_break = tbreak setup
debug_tool = olimex-arm-usb-tiny-h


[env:ventilator-ci]
board = lolin32
framework = arduino
platform = espressif32
lib_deps =
    ${common.lib_deps}
build_flags =
    -DCI_BUILD
    ${common.build_flags}
    -I .pio/libdeps/ventilator-ci/ArduinoJson_ID64/extras
upload_port = /dev/cu.SLAB_USBtoUART
upload_speed = 115200
